#!/usr/bin/env python
#
# MIT License

# Copyright (c) 2022 Martincz Gao

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

import collections
import os
import rule
import sys
from deepmerge import always_merger
from ruamel.yaml import YAML

def main():

    yaml = YAML()
    yaml.allow_unicode = True
    yaml.explicit_start = False
    yaml.preserve_quotes = True
    yaml.indent(mapping=2, sequence=4, offset=2)

    # 读取所有配置
    with open('configs/base.yaml') as fp:
        cfg_base = yaml.load(fp)

    try:
        with open('configs/custom.yaml') as fp:
            cfg_custom = yaml.load(fp)
            if cfg_custom is None:
                raise FileNotFoundError
    except FileNotFoundError:
        print('未配置 configs/custom.yaml 文件！')
        sys.exit(1)

    cfg_rule = rule.getRules()

    # 检查重复项
    # print([item for item, count in collections.Counter(cfg_rule['rules']).items() if count > 1])

    # 生成最终配置
    cfg_final = cfg_base.copy()
    cfg_array = [cfg_base, cfg_custom, cfg_rule]
    for cfg in cfg_array:
        cfg_final.update(cfg)

    with open('configuration.yaml', 'w') as fp:
        yaml.dump(cfg_final, fp)


if __name__ == '__main__':
    main()